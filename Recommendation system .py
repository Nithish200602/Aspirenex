# -*- coding: utf-8 -*-
"""Recommendation system

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h2MZDfT6LHebCDjnsJCEAiGhLJQ32bmo
"""

# Sample data: movie ratings by users
ratings = {
    'Alice': {'Star Wars': 5, 'Inception': 4, 'Joker': 1},
    'Bob': {'Star Wars': 4, 'Inception': 5, 'Joker': 2},
    'Charlie': {'Star Wars': 5, 'Inception': 2, 'Joker': 4},
    'David': {'Star Wars': 3, 'Inception': 5}
}

from math import sqrt

def cosine_similarity(user1, user2, ratings):
    common_movies = [movie for movie in ratings[user1] if movie in ratings[user2]]

    numerator = sum(ratings[user1][movie] * ratings[user2][movie] for movie in common_movies)

    sum1 = sum(ratings[user1][movie] ** 2 for movie in ratings[user1])
    sum2 = sum(ratings[user2][movie] ** 2 for movie in ratings[user2])
    denominator = sqrt(sum1) * sqrt(sum2)

    if denominator == 0:
        return 0
    else:
        return numerator / denominator

def recommend_movies(user, ratings):
    # Find similarity scores between the given user and all other users
    similarities = [(cosine_similarity(user, other_user, ratings), other_user) for other_user in ratings if other_user != user]

    similarities.sort(reverse=True)  # Sort by descending similarity score

    recommendations = {}

    for similarity, other_user in similarities:
        for movie in ratings[other_user]:
            if movie not in ratings[user]:
                if movie not in recommendations:
                    recommendations[movie] = 0
                recommendations[movie] += ratings[other_user][movie] * similarity

    # Convert recommendations to a sorted list
    recommendations = sorted(recommendations.items(), key=lambda x: x[1], reverse=True)

    return recommendations

user = 'David'
print(f"Recommendations for {user}:")
recommendations = recommend_movies(user, ratings)
for movie, score in recommendations:
    print(f"{movie}: {score}")